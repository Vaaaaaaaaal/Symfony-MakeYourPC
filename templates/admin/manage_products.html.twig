{% extends 'base.html.twig' %}

{% block title %}Gestion des produits - MakeYourPC{% endblock %}

{% block body %}
    <div class="container">
        <h1 class="my-4">Gestion des produits</h1>
        
        <div class="manage-products">
            <div class="product-actions">
                <a href="{{ path('app_add_product') }}" class="btn-add-product">
                    <i data-lucide="plus-circle"></i><span class="btn-text">Ajouter un produit</span>
                </a>
                <div class="search-products">
                    <input type="text" id="product-search" placeholder="Rechercher un produit...">
                    <button class="btn-search"><i data-lucide="search"></i></button>
                </div>
            </div>

            <table class="product-table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Nom</th>
                        <th>Type</th>
                        <th>Prix</th>
                        <th>Stock</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for product in products %}
                        <tr>
                            <td>
                                {% if product.imagePath %}
                                    <img src="{{ asset('images/products/' ~ product.imagePath) }}" alt="{{ product.name }}" class="product-thumbnail">
                                    <script>
                                        console.log('Produit: {{ product.name }}');
                                        console.log('Image path: {{ product.imagePath }}');
                                        console.log('Full URL: {{ asset('images/products/' ~ product.imagePath) }}');
                                    </script>
                                {% else %}
                                    <img src="{{ asset('images/products/default.png') }}" alt="Image par défaut" class="product-thumbnail">
                                    <script>
                                        console.log('Produit sans image: {{ product.name }}');
                                        console.log('Image property:', {{ product.imagePath|json_encode|raw }});
                                    </script>
                                {% endif %}
                            </td>
                            <td>{{ product.name }}</td>
                            <td>{{ product.type }}</td>
                            <td>{{ product.price|number_format(2, ',', ' ') }} €</td>
                            <td>{{ product.stock }}</td>
                            <td>
                                <a href="{{ path('app_edit_product', {'id': product.id}) }}" class="btn-edit" title="Modifier">
                                    <i data-lucide="edit-2"></i>
                                </a>
                                <button class="btn-delete" 
                                        title="Supprimer" 
                                        data-product-id="{{ product.id }}"
                                        data-product-name="{{ product.name }}">
                                    <i data-lucide="trash-2"></i>
                                </button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    {# Modal de confirmation #}
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <h2>Confirmation de suppression</h2>
            <p>Êtes-vous sûr de vouloir supprimer le produit <span id="productName"></span> ?</p>
            <div class="modal-actions">
                <button id="confirmDelete" class="btn-danger">Supprimer</button>
                <button id="cancelDelete" class="btn-secondary">Annuler</button>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        const modal = document.getElementById('deleteModal');
        let currentProductId = null;
        
        console.log('Script de suppression chargé');
        
        // Ajouter les écouteurs d'événements pour tous les boutons de suppression
        const deleteButtons = document.querySelectorAll('.btn-delete');
        console.log('Nombre de boutons de suppression trouvés:', deleteButtons.length);
        
        deleteButtons.forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.dataset.productId;
                const productName = this.dataset.productName;
                console.log('Clic sur le bouton de suppression', { productId, productName });
                
                currentProductId = productId;
                document.getElementById('productName').textContent = productName;
                modal.style.display = 'flex';
            });
        });

        const confirmDeleteButton = document.getElementById('confirmDelete');
        console.log('Bouton de confirmation trouvé:', confirmDeleteButton);
        
        confirmDeleteButton.addEventListener('click', async () => {
            try {
                console.log('Clic sur le bouton de confirmation');
                console.log('ID du produit à supprimer:', currentProductId);
                
                const url = `/admin/product/delete/${currentProductId}`;
                console.log('URL de suppression:', url);
                
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    }
                });
                
                console.log('Statut de la réponse:', response.status);
                console.log('Headers de la réponse:', Object.fromEntries(response.headers));
                
                const data = await response.json();
                console.log('Données reçues:', data);
                
                if (data.success) {
                    console.log('Suppression réussie');
                    const row = document.querySelector(`[data-product-id="${currentProductId}"]`).closest('tr');
                    if (row) {
                        console.log('Ligne trouvée, suppression...');
                        row.remove();
                    } else {
                        console.log('Ligne non trouvée dans le tableau');
                    }
                    
                    // Afficher la notification
                    const notification = document.createElement('div');
                    notification.className = 'notification success';
                    notification.innerHTML = `
                        <div class="notification-content">
                            <i data-lucide="check-circle"></i>
                            <span>${data.message}</span>
                        </div>
                    `;
                    document.body.appendChild(notification);
                    lucide.createIcons();
                    
                    setTimeout(() => {
                        notification.remove();
                    }, 3000);
                } else {
                    console.log('Échec de la suppression:', data.message);
                    const notification = document.createElement('div');
                    notification.className = 'notification error';
                    notification.innerHTML = `
                        <div class="notification-content">
                            <i data-lucide="alert-circle"></i>
                            <span>${data.message}</span>
                        </div>
                    `;
                    document.body.appendChild(notification);
                    lucide.createIcons();
                }
            } catch (error) {
                console.error('Erreur détaillée:', error);
                console.error('Stack trace:', error.stack);
                const notification = document.createElement('div');
                notification.className = 'notification error';
                notification.innerHTML = `
                    <div class="notification-content">
                        <i data-lucide="alert-circle"></i>
                        <span>Une erreur est survenue lors de la suppression</span>
                    </div>
                `;
                document.body.appendChild(notification);
                lucide.createIcons();
            }
            
            modal.style.display = 'none';
        });

        // Fermer la modale si on clique en dehors
        window.onclick = (event) => {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        }
    </script>

    <style>
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 90%;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-delete {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            color: #dc3545; /* Rouge pour l'icône de suppression */
        }

        .btn-delete:hover {
            color: #c82333; /* Rouge plus foncé au survol */
        }

        .notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.3s ease-out;
            z-index: 1000;
        }

        .notification-content {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .notification.success {
            background-color: #28a745;
            color: white;
        }

        .notification.error {
            background-color: #dc3545;
            color: white;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
{% endblock %}
