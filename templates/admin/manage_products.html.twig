{% extends 'base.html.twig' %}

{% block title %}Gestion des produits - MakeYourPC{% endblock %}

{% block body %}
    <div class="container">
        <h1 class="my-4">Gestion des produits</h1>
        
        <div class="manage-products">
            <div class="product-actions">
                <a href="{{ path('app_add_product') }}" class="btn-add-product">
                    <i data-lucide="plus-circle"></i><span class="btn-text">Ajouter un produit</span>
                </a>
                <div class="search-products">
                    <input type="text" id="product-search" placeholder="Rechercher un produit...">
                    <button class="btn-search"><i data-lucide="search"></i></button>
                </div>
            </div>

            <table class="product-table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Nom</th>
                        <th>Prix</th>
                        <th>Stock</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for product in products %}
                        <tr>
                            <td>
                                {% if product.imagePath %}
                                    <img src="{{ asset('images/products/' ~ product.imagePath) }}" alt="{{ product.name }}" class="product-thumbnail">
                                    <script>
                                        console.log('Produit: {{ product.name }}');
                                        console.log('Image path: {{ product.imagePath }}');
                                        console.log('Full URL: {{ asset('images/products/' ~ product.imagePath) }}');
                                    </script>
                                {% else %}
                                    <img src="{{ asset('images/products/default.png') }}" alt="Image par défaut" class="product-thumbnail">
                                    <script>
                                        console.log('Produit sans image: {{ product.name }}');
                                        console.log('Image property:', {{ product.imagePath|json_encode|raw }});
                                    </script>
                                {% endif %}
                            </td>
                            <td>{{ product.name }}</td>
                            <td>{{ product.price|number_format(2, ',', ' ') }} €</td>
                            <td>{{ product.stock }}</td>
                            <td>
                                <a href="{{ path('app_edit_product', {'id': product.id}) }}" class="btn-edit" title="Modifier">
                                    <i data-lucide="edit-2"></i>
                                </a>
                                <button class="btn-delete" 
                                        title="Supprimer" 
                                        data-product-id="{{ product.id }}"
                                        data-product-name="{{ product.name }}">
                                    <i data-lucide="trash-2"></i>
                                </button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    {# Modal de confirmation #}
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <h2>Confirmation de suppression</h2>
            <p>Êtes-vous sûr de vouloir supprimer le produit <span id="productName"></span> ?</p>
            <div class="modal-actions">
                <button id="confirmDelete" class="btn-danger">Supprimer</button>
                <button id="cancelDelete" class="btn-secondary">Annuler</button>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Script chargé');
            
            const modal = document.getElementById('deleteModal');
            const cancelDeleteButton = document.getElementById('cancelDelete');
            const confirmDeleteButton = document.getElementById('confirmDelete');
            let currentProductId = null;
            
            console.log('Modal:', modal);
            console.log('Bouton annuler:', cancelDeleteButton);
            console.log('Bouton confirmer:', confirmDeleteButton);
            
            document.querySelectorAll('.btn-delete').forEach(button => {
                console.log('Ajout du gestionnaire sur le bouton:', button);
                
                button.addEventListener('click', (e) => {
                    console.log('Clic sur le bouton de suppression');
                    e.preventDefault();
                    
                    const productId = button.dataset.productId;
                    const productName = button.dataset.productName;
                    console.log('ID du produit:', productId);
                    console.log('Nom du produit:', productName);
                    
                    currentProductId = productId;
                    document.getElementById('productName').textContent = productName;
                    modal.style.display = 'flex';
                });
            });
            
            confirmDeleteButton.addEventListener('click', async () => {
                console.log('Confirmation de suppression pour le produit:', currentProductId);
                
                try {
                    const response = await fetch(`/admin/product/delete/${currentProductId}`, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token('delete-product') }}',
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();
                    console.log('Réponse du serveur:', data);

                    if (data.success) {
                        modal.style.display = 'none';
                        
                        const productRow = document.querySelector(`[data-product-id="${currentProductId}"]`).closest('tr');
                        productRow.remove();
                        showNotification('Le produit a été supprimé avec succès', 'success');
                    } else {
                        throw new Error(data.message || 'Erreur lors de la suppression');
                    }
                } catch (error) {
                    console.error('Erreur:', error);
                    showNotification('Erreur lors de la suppression du produit', 'error');
                }
            });
            function showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.innerHTML = `
                    <div class="notification-content">
                        <span>${message}</span>
                    </div>
                `;
                
                document.body.appendChild(notification);
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }

            cancelDeleteButton.addEventListener('click', () => {
                console.log('Clic sur Annuler');
                modal.style.display = 'none';
            });
            
            window.addEventListener('click', (event) => {
                if (event.target === modal) {
                    console.log('Clic en dehors du modal');
                    modal.style.display = 'none';
                }
            });

            const searchInput = document.getElementById('product-search');
            const productTable = document.querySelector('.product-table tbody');
            const productRows = Array.from(productTable.querySelectorAll('tr'));

            const searchProducts = (searchTerm) => {
                searchTerm = searchTerm.toLowerCase().trim();
                
                productRows.forEach(row => {
                    const productName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const shouldShow = productName.includes(searchTerm);
                    row.style.display = shouldShow ? '' : 'none';
                });
            };

            searchInput.addEventListener('input', (e) => {
                searchProducts(e.target.value);
            });

            document.querySelector('.btn-search').addEventListener('click', (e) => {
                e.preventDefault();
                searchProducts(searchInput.value);
            });
        });
    </script>

    <style>
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .modal-content {
            background-color: #222222;
            color: #fff;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            max-width: 500px;
            width: 90%;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-delete {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            color: #dc3545; 
        }

        .btn-delete:hover {
            color: #c82333; 
        }

        .notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.3s ease-out;
            z-index: 1000;
        }

        .notification-content {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .notification.success {
            background-color: #28a745;
            color: white;
        }

        .notification.error {
            background-color: #dc3545;
            color: white;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .btn-edit {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            color: #3498db; 
            transition: color 0.3s ease;
        }

        .btn-edit:hover {
            color: #2980b9; 
        }

        td .btn-edit,
        td .btn-delete {
            margin: 0 5px;
            font-size: 1.1rem;
        }

        .search-products {
            position: relative;
            display: flex;
            gap: 0.5rem;
            max-width: 300px;
        }

        .search-products input {
            flex: 1;
            padding: 0.5rem 1rem;
            border: 1px solid #444;
            border-radius: 4px;
            background-color: #333;
            color: #fff;
        }

        .btn-search {
            background: none;
            border: none;
            color: #3498db;
            cursor: pointer;
            padding: 0.5rem;
            display: flex;
            align-items: center;
            transition: color 0.3s ease;
        }

        .btn-search:hover {
            color: #2980b9;
        }
    </style>
{% endblock %}
