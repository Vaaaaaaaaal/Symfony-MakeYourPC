{% extends 'base.html.twig' %}

{% block title %}Gestion des utilisateurs - MakeYourPC{% endblock %}

{% block body %}
<div class="container">
    <h1 class="my-4">Gestion des utilisateurs</h1>

    <div class="manage-users">
        <table class="user-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nom</th>
                    <th>Prénom</th>
                    <th>Email</th>
                    <th>Rôle</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for user in users %}
                    <tr>
                        <td>{{ user.id }}</td>
                        <td>{{ user.name }}</td>
                        <td>{{ user.surname }}</td>
                        <td>{{ user.email }}</td>
                        <td>
                            {% if user.id == app.user.id %}
                                <select class="role-select" disabled>
                                    <option value="ROLE_USER" {% if not user.isAdmin %}selected{% endif %}>Utilisateur</option>
                                    <option value="ROLE_ADMIN" {% if user.isAdmin %}selected{% endif %}>Administrateur</option>
                                </select>
                            {% else %}
                                <select class="role-select" data-user-id="{{ user.id }}">
                                    <option value="ROLE_USER" {% if not user.isAdmin %}selected{% endif %}>Utilisateur</option>
                                    <option value="ROLE_ADMIN" {% if user.isAdmin %}selected{% endif %}>Administrateur</option>
                                </select>
                            {% endif %}
                        </td>
                        <td class="actions">
                            <button class="btn-action edit" title="Modifier">
                                <i data-lucide="edit"></i>
                            </button>
                            {% if not user.isAdmin and user.id != app.user.id %}
                                <button class="btn-action delete" title="Supprimer">
                                    <i class="fas fa-trash"></i>
                                </button>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<div class="modal" id="editUserModal" style="display: none;">
    <div class="modal-content">
        <h2>Modifier l'utilisateur</h2>
        <form id="editUserForm">
            <div class="form-group">
                <label for="editName">Nom</label>
                <input type="text" id="editName" name="name" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="editSurname">Prénom</label>
                <input type="text" id="editSurname" name="surname" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="editEmail">Email</label>
                <input type="email" id="editEmail" name="email" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="editAdresse">Adresse</label>
                <input type="text" id="editAdresse" name="adresse" class="form-control">
            </div>
            <div class="form-group">
                <label for="editTelephone">Téléphone</label>
                <input type="text" id="editTelephone" name="telephone" class="form-control">
            </div>
            <div class="modal-actions">
                <button type="submit" class="btn-save">Enregistrer</button>
                <button type="button" class="btn-cancel" onclick="closeModal('editUserModal')">Annuler</button>
            </div>
        </form>
    </div>
</div>

<div class="modal" id="deleteConfirmModal" style="display: none;">
    <div class="modal-content">
        <h2>Confirmer la suppression</h2>
        <p>Êtes-vous sûr de vouloir supprimer cet utilisateur ?</p>
        <div class="modal-actions">
            <button class="btn-delete" id="confirmDelete">Supprimer</button>
            <button class="btn-cancel" onclick="closeModal('deleteConfirmModal')">Annuler</button>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const roleSelects = document.querySelectorAll('.role-select');
    
    roleSelects.forEach(select => {
        select.addEventListener('change', function() {
            const userId = this.dataset.userId;
            const newRole = this.value;
            
            fetch(`/admin/users/${userId}/role`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    role: newRole
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Recharger la page pour mettre à jour l'interface
                    location.reload();
                } else {
                    alert('Erreur lors du changement de rôle');
                    // Remettre l'ancienne valeur
                    this.value = this.options[0].value;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Une erreur est survenue');
                this.value = this.options[0].value;
            });
        });
    });

    // Gestion de l'édition
    const editButtons = document.querySelectorAll('.btn-action.edit');
    const editForm = document.getElementById('editUserForm');
    let currentUserId = null;

    editButtons.forEach(button => {
        button.addEventListener('click', function() {
            const row = this.closest('tr');
            currentUserId = row.querySelector('.role-select')?.dataset.userId;
            
            // Pré-remplir le formulaire
            document.getElementById('editName').value = row.children[1].textContent;
            document.getElementById('editSurname').value = row.children[2].textContent;
            document.getElementById('editEmail').value = row.children[3].textContent;
            
            document.getElementById('editUserModal').style.display = 'flex';
        });
    });

    editForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            name: document.getElementById('editName').value,
            surname: document.getElementById('editSurname').value,
            email: document.getElementById('editEmail').value,
            adresse: document.getElementById('editAdresse').value,
            telephone: document.getElementById('editTelephone').value
        };

        fetch(`/admin/users/${currentUserId}/edit`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Une erreur est survenue');
        });
    });

    // Gestion de la suppression
    const deleteButtons = document.querySelectorAll('.btn-action.delete');
    let userToDelete = null;

    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const row = this.closest('tr');
            userToDelete = row.querySelector('.role-select').dataset.userId;
            document.getElementById('deleteConfirmModal').style.display = 'flex';
        });
    });

    document.getElementById('confirmDelete').addEventListener('click', function() {
        if (!userToDelete) return;

        fetch(`/admin/users/${userToDelete}/delete`, {
            method: 'DELETE',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const row = document.querySelector(`[data-user-id="${userToDelete}"]`).closest('tr');
                row.remove();
                closeModal('deleteConfirmModal');
            } else {
                alert(data.message);
            }
        })
        .catch(() => {
            // Suppression réussie, on ferme la modale et on recharge la page
            closeModal('deleteConfirmModal');
            location.reload();
        });
    });
});

function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}
</script>
{% endblock %} 